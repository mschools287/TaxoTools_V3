% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/process_check_data.R
\name{process_check_data}
\alias{process_check_data}
\title{Process Data Issues in Dataset}
\usage{
process_check_data(
  data,
  lat_col,
  long_col,
  elevation_col,
  trait_columns,
  date_col = NULL
)
}
\arguments{
\item{data}{A data frame containing the dataset to process.}

\item{lat_col}{A string specifying the name of the column containing latitude values.}

\item{long_col}{A string specifying the name of the column containing longitude values.}

\item{elevation_col}{A string specifying the name of the column containing elevation values.}

\item{trait_columns}{A vector of strings specifying the names of columns containing trait data.}

\item{date_col}{A string specifying the name of the column containing date values. Defaults to NULL.}
}
\value{
This function does not return a value. It prints notifications to the console about any data issues found.
}
\description{
This function checks for common data issues, including:
\enumerate{
\item Date formatting
\item Coordinate formatting
\item Coordinate validity
\item Elevation formatting
\item Missing metadata columns
\item Missing trait values
\item Character values in numeric (trait) columns
}
}
\examples{
# Bad example: Dataset with inconsistent date formats, invalid coordinates, inconsistent elevation values, and missing trait data.
data_bad <- data.frame(
  Species = c("Species A", "Species B", "Species C"),
  Date = c("01/01/2020", "2020-02-01", "March 3, 2020"),
  Latitude = c("12°34'56.78\" N", "34.9352", "100.00"),
  Longitude = c("78°34'56.78\" W", "12.5689", "200.00"),
  Elevation = c("100", "200ft", "300m"),
  trait1 = c("50mm", "unsure", "55mm"),
  trait2 = c("80cm", "damaged", "75mm"),
  trait3 = c("30mm", "40mm", "unsure"),
  trait4 = c(NA, NA, "45mm"))

process_check_data(
  data = data_bad,
  lat_col = "Latitude",
  long_col = "Longitude",
  elevation_col = "Elevation",
  trait_columns = c("trait1", "trait2", "trait3", "trait4"),
  date_col = "Date")

# Good example: Dataset with consistent date formats, valid coordinates, consistent elevation values, and less than 50\% missing trait data.
data_good <- data.frame(
  Species = c("SpeciesA", "SpeciesB", "SpeciesC", "SpeciesD"),
  Institution = c("Institution1", "Institution2", "Institution3", "Institution4"),
  Number = c(1, 2, 3, 4),
  Country = c("USA", "Canada", "Mexico", "Brazil"),
  Region = c("North", "East", "South", "West"),
  Locality = c("Locality1", "Locality2", "Locality3", "Locality4"),
  Latitude = c(34.05, 45.42, -23.55, -15.78),
  Longitude = c(-118.25, -75.69, -46.63, -47.92),
  Elevation = c(100, 200, 300, 400),
  DateCollected = c("2023-05-10", "2023-06-15", "2023-07-20", "2023-08-25"),
  trait1 = c(1.5, 2.3, 3.1, 4.2),
  trait2 = c(0.5, 0.8, 1.0, 1.2),
  trait3 = c(NA, 2.5, 3.5, 4.5))

process_check_data(
  data = data_good,
  lat_col = "Latitude",
  long_col = "Longitude",
  elevation_col = "Elevation",
  trait_columns = c("trait1", "trait2", "trait3"),
  date_col = "DateCollected")

}
